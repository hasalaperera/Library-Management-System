<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>