<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAPCSURBVGhD7ZhLrxRFGEAHkFdEAUEE3yQICRAXLPwBYGKC
        +OC5gbjHKKCuQRIlIKyMEFZsfMDCDQkLjPG1c+cCJGiAEDAkYMJDJIAuhHMmt0zf8auxu+/cewfSJzm5
        0z1VNfXdrv7q6241NDQ0NDQ0NDTcE4wf+FuFOn2Ghcm4BvfgfE9UZAHadzU61ogzE3fgH3gGn8S6PIVn
        8Rp+iDNw2HkEd+OfeAdv4mIcKs/jLXRMx/4Ip2PPGYNv4O/ojyW3Yq/YhsWxL+EG7Blz8Tss/oheximY
        4zX8AW8M+D2+gjkewivY+Tvf4DM4JLwJr2Ln4LoPc+zCqI96b+XYj1EfA1yFlXkAP8Fo0OQKjPBKRO2L
        5vq+ilH75Mfo3EoxDb/GaKCiZpsIl1PUvqhLNcIlFLUv+hVOxa48jicwGqDTSRiRMlo3r2OEY0btOz2O
        czDkWXRPiDpG5m70oQTimFH7yFP4nyRgdKcx6pDzOYwwO0Xti36LEfMwap/TYAZdmR8xatjNlRhhio3a
        F30Zc0xEl/hL6OZ7DqMxks79X+oEcgBzmGKjPvoBVsEs5cb4G0bjDQpkNv6KUcOc5nYzXA5TrNnJe0Zd
        Tp1XYgKuw4P4C6bN08+e8zvbyMP4JRbn4O3g1RuEhV/V+8Qiry5ucGWSi3NKy9hSaS963mCfwBCvzE/Y
        OVjO2/gCVmEsuvbTGKbSzbgIHxzQz57zu9TOQtK+BrMTH8OueAnLbIjJ8/g0liUF8Re+iU4uxzh8C21r
        H4OphANYL/2DxUnnvIBL8P9wOdneiS31REmWYQrmdU9UxR/2gac46Zz+kP9tr2iEN226J7wSVXkb7eve
        UesR2SRwBIuT7qYZ6lNci6519wUxA/m9694rXhX7/IyO4eN1bZxY54NVGZejHEKPN7WP6vEOOsbn7aMh
        4L7xPuaeUSJTlZz2qYXto3r4WO0Ypt6eYEDbsUxAqUq2UPTYJ8G62NcxckVnbXyFsx6PYnp50Kn7gvQy
        EO/DYcMJW4J4pQ7jMbyIPvNLL5eWmWvU+AKdxJb2UT3eQ8f4rH00SqT0awqtm37T06tjjRpuiKkoteyo
        irWXfX0rWfoFxHBhFetkrAIsO8ryIv6N9u32bmxEsfBLwVh2dFtm/ue9EikIN+RZ2BdY7aZg1HvGHduM
        5MsH9fO7WHyjk6oKS5y+CUasYk2jaaI5vSdcTk4+PZ/0XTBWsRaA1k4n0Y3OR10DNMWanYo3dl8HU5VH
        0c3WYAw++6LuXuC+Cqa4zOo8qPUVBrOx1Wq17gJjRBjIpQHG4QAAAABJRU5ErkJggg==
</value>
  </data>
</root>